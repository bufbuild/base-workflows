name: PR Approval Bypass Notifier
on:
  workflow_call:
    secrets:
      SLACK_MERGE_WITHOUT_APPROVAL_WEBHOOK:
        required: true
permissions:
  pull-requests: read
jobs:
  approval:
    runs-on: ubuntu-latest
    steps:
      - name: Fail If No Approval
        if: ${{ github.event.pull_request.merged }}
        env:
          AUTH_HEADER: 'Authorization: token ${{ secrets.GITHUB_TOKEN }}'
          JSON_HEADER: 'Content-Type: application/json'
          REVIEWS_URL: 'https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews'
          MAX_REVIEWS: 100
        run: |
          TEMP=$(mktemp)
          for i in $(seq 1 100)
          do
            curl -sSL -H "${JSON_HEADER}" -H "${AUTH_HEADER}" "${REVIEWS_URL}?per_page=${MAX_REVIEWS}&page=$i" > $TEMP/p$i.json
            if [[ $i != 1 ]]
            then
              jq -s '.[0] + .[1]' $TEMP/p$(expr $i - 1)merge.json $TEMP/p$i.json > $TEMP/p$(echo $i)merge.json
            else
              cp p$i.json p$(echo $i)merge.json
            fi
            if [[ $(cat p$i.json | jq length) != ${MAX_REVIEWS?} ]]; then break; fi
          done
          cat p$(echo $i)merge.json |  jq -e '. | map({user: .user.login, state: .state})
                                                | map(select(.state == "APPROVED" or .state == "CHANGES_REQUESTED" or .state == "DISMISSED"))
                                                | reduce .[] as $x ({}; .[$x.user] = $x.state)
                                                | to_entries | map(.value)
                                                | contains(["APPROVED"]) and (contains(["CHANGES_REQUESTED"]) | not)'
      - name: Slack Notification
        if: ${{ failure() }}
        run: |
          jq --null-input '{ text: "Oh no! The following PR was merged without approval: ${{github.event.pull_request.html_url}}" }' \
          | curl -sSL -X POST -H 'Content-Type: application/json' -d @- '${{ secrets.SLACK_MERGE_WITHOUT_APPROVAL_WEBHOOK }}'
